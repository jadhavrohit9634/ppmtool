{"version":3,"sources":["components/Project/CreateProjectButton.js","actions/types.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/backlogReducer.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","reportWebVitals.js","index.js"],"names":["CreateProjectButton","Fragment","to","className","GET_ERRORS","GET_PROJECTS","GET_PROJECT","DELETE_PROJECT","GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","SET_CURRENT_USER","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","projectIdentifier","projectName","description","onClick","bind","Component","connect","window","confirm","delete","Dashboard","getProjects","projects","map","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","start_date","end_date","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","initialState","project_tasks","project_task","backlogReducer","action","filter","projectSequence","errorReducer","projectRedcuer","booleanActionPayload","combineReducers","projectReducer","backlog","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","todoItems","inProgress","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","Landing","Register","newUser","username","password","confirmPassword","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","SecureRoute","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e033399.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst CreateProjectButton = () => {\r\n    return (\r\n        <React.Fragment>\r\n             <Link \r\n                to=\"/addProject\" \r\n                className=\"btn btn-lg btn-info\">\r\n                Create a Project\r\n            </Link>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default CreateProjectButton;\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n\r\n//Types for BACKLOG actions\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import axios from 'axios';\r\nimport {GET_ERRORS, GET_PROJECT, GET_PROJECTS, DELETE_PROJECT} from './types';\r\n\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n    try {\r\n        await axios.post(\"/api/project\", project);            \r\n        history.push(\"/dashboard\");\r\n         dispatch({\r\n            \r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            \r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n    const res = await axios.get(\"/api/project/all\");\r\n    \r\n    dispatch ({\r\n        type: GET_PROJECTS,\r\n        payload: res.data\r\n    });\r\n}\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/project/${id}`);\r\n        \r\n        dispatch({\r\n            type: GET_PROJECT,\r\n            payload: res.data\r\n        })        \r\n    } catch (error) {\r\n        history.push('/dashboard')\r\n    }\r\n}\r\n\r\nexport const deleteProject = (id) => async dispatch => {\r\n    \r\n    if(window.confirm(\"Are you sure? This will delete the project and all tasks related to it!\")) {\r\n        await axios.delete(`/api/project/${id}`)\r\n    \r\n    dispatch({\r\n        type: DELETE_PROJECT,\r\n        payload: id\r\n    })\r\n    }  \r\n    \r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport {deleteProject} from '../../actions/projectActions'\r\n\r\nclass ProjectItem extends Component {\r\n    \r\n    onDeleteClick = (id) => {\r\n        this.props.deleteProject(id);\r\n    };\r\n    \r\n    render() {\r\n        \r\n        const {project} = this.props;\r\n        return (\r\n           <div className=\"container\">\r\n                                <div className=\"card card-body bg-light mb-3\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-2\">\r\n                                            <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n                                        </div>\r\n                                        <div className=\"col-lg-6 col-md-4 col-8\">\r\n                                            <h3>{project.projectName}</h3>\r\n                                            <p>{project.description}</p>\r\n                                        </div>\r\n                                        <div className=\"col-md-4 d-none d-lg-block\">\r\n                                            <ul className=\"list-group\">\r\n                                                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                                                    <li className=\"list-group-item board\">\r\n                                                        <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                                                    </li>\r\n                                                </Link>\r\n                                                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                                                    <li className=\"list-group-item update\">\r\n                                                        <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                                                    </li>\r\n                                                </Link>\r\n                                            \r\n                                                <li className=\"list-group-item delete\"\r\n                                                 onClick={this.onDeleteClick.bind(this,   project.projectIdentifier)}>\r\n                                                        <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                                                </li>\r\n                                                \r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n        )\r\n    }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n    deleteProject: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, {deleteProject}) (ProjectItem);","import React, { Component } from 'react'\r\nimport CreateProjectButton from './Project/CreateProjectButton';\r\nimport ProjectItem from './Project/ProjectItem';\r\nimport {connect} from 'react-redux';\r\nimport { getProjects } from '../actions/projectActions'\r\nimport PropTypes from \"prop-types\"\r\n\r\nclass Dashboard extends Component {\r\n    \r\n    componentDidMount(){\r\n        this.props.getProjects();\r\n    }\r\n    \r\n    \r\n    render() {\r\n        \r\n        const {projects} = this.props.project;\r\n        \r\n        return (\r\n             <div className=\"projects\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <h1 className=\"display-4 text-center\">Projects</h1>\r\n                            <br />\r\n                                <CreateProjectButton />\r\n                            <br />\r\n                            <hr />\r\n                            {\r\n                                projects.map(project => {\r\n                                    return <ProjectItem key={project.id} project={project}/>\r\n                                })\r\n                            }\r\n                          \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n    </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nDashboard.propTypes = {\r\n    project: PropTypes.object.isRequired,\r\n    getProjects: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    project: state.project\r\n})\r\n\r\nexport default connect( mapStateToProps, {getProjects} ) (Dashboard);\r\n","import axios from \"axios\"\r\n\r\nconst setJWTToken = token => {\r\n    \r\n    if(token){\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    } else {\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n}\r\n\r\nexport default setJWTToken;","import axios from \"axios\"\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport jwt_decode from \"jwt-decode\"\r\n\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n    \r\n    \r\n    try {\r\n        await axios.post(\"/api/users/register\", newUser);\r\n        history.push(\"/login\");\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload:{}\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n}\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n    \r\n    \r\n   try {\r\n       \r\n    // post => Login Request\r\n    \r\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n    // extract token from res.data\r\n    const {token} = res.data;   \r\n    // store the token in localStorage\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    // set out token in header ***\r\n    setJWTToken(token)\r\n    // decode the token on React\r\n    const decoded = jwt_decode(token);\r\n    // dispatch to our securityReducer \r\n    \r\n    dispatch({\r\n        type: SET_CURRENT_USER,\r\n        payload: decoded\r\n    });\r\n   } catch (err) {\r\n       dispatch({\r\n           type: GET_ERRORS,\r\n           payload: err.response.data\r\n       });\r\n   }\r\n    \r\n}\r\n\r\n\r\nexport const logout = () => dispatch => {\r\n    localStorage.removeItem(\"jwtToken\");\r\n    setJWTToken(false);\r\n    dispatch({\r\n        type: SET_CURRENT_USER,\r\n        payload: {}\r\n    });\r\n}","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport PropTypes from \"prop-types\"\r\nimport {connect} from 'react-redux'\r\nimport {logout} from '../../actions/securityActions'\r\n\r\n class Header extends Component {\r\n     \r\n    logout(){\r\n        this.props.logout();\r\n        window.location.href = \"/\"\r\n    }\r\n    \r\n    render() {\r\n        \r\n        const {validToken, user} = this.props.security\r\n        \r\n        const userIsAuthenticated = (\r\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/dashboard\">\r\n                        Dashboard\r\n                     </Link>\r\n                    </li>\r\n                </ul>\r\n\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                     <Link className=\"nav-link\" to=\"/dashboard\">\r\n                       <i className=\"fas fa-user-circle mr-1\" />\r\n                       {user.fullName}\r\n                     </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                     <Link className=\"nav-link\" to=\"/logout\" onClick={this.logout.bind(this)}>\r\n                        Logout                       \r\n                     </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n        \r\n         const userIsNotAuthenticated = (\r\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n                \r\n\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                     <Link className=\"nav-link\" to=\"/register\">\r\n                       Sign Up\r\n                     </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                     <Link className=\"nav-link\" to=\"/login\">\r\n                        Login                      \r\n                     </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n        \r\n        let headerLinks;\r\n        \r\n        if(validToken && user){\r\n            headerLinks = userIsAuthenticated;\r\n        } else {\r\n            headerLinks = userIsNotAuthenticated;\r\n        }\r\n        \r\n        \r\n        return (\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n                <div className=\"container\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">\r\n                        Personal Project Management Tool\r\n                    </Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n                        <span className=\"navbar-toggler-icon\" />\r\n                    </button>\r\n                    {headerLinks}\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nHeader.propTypes = {\r\n    logout: PropTypes.func.isRequired,\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security\r\n})\r\n\r\nexport default connect(mapStateToProps, {logout}) (Header);","import React, { Component } from 'react'\r\nimport PropTypes from \"prop-types\"\r\nimport {connect} from 'react-redux'\r\nimport {createProject} from '../../actions/projectActions'\r\nimport classnames from \"classnames\" \r\n\r\nclass AddProject extends Component {\r\n    \r\n    constructor() {\r\n        super();\r\n        \r\n        this.state = {\r\n            projectName: \"\",\r\n            projectIdentifier: \"\",\r\n            description: \"\",\r\n            start_date: \"\",\r\n            end_date: \"\",\r\n            errors: {}\r\n        };\r\n        \r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    \r\n    //life cycle hooks\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.errors){\r\n            this.setState({errors: nextProps.errors})\r\n        }\r\n    }\r\n    \r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value});\r\n    }\r\n    \r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const newProject = {\r\n            projectName: this.state.projectName,\r\n            projectIdentifier: this.state.projectIdentifier,\r\n            description: this.state.description,\r\n            start_date: this.state.start_date,\r\n            end_date: this.state.end_date\r\n        }\r\n       // console.log(newProject);\r\n       this.props.createProject(newProject, this.props.history)\r\n    }\r\n    render() {\r\n        const {errors} = this.state;\r\n        \r\n        return (\r\n             <div className=\"register\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8 m-auto\">\r\n                                <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                                <hr />\r\n                                <form onSubmit={this.onSubmit}>\r\n                                    <div className=\"form-group\">\r\n                                        <input name=\"projectName\" type=\"text\" \r\n                                        className={classnames(\"form-control form-control-lg\",{\r\n                                            \"is-invalid\" : errors.projectName\r\n                                        })}\r\n                                        placeholder=\"Project Name\" \r\n                                        value={this.state.projectName}\r\n                                        onChange={this.onChange} />\r\n                                        {errors.projectName && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                                {errors.projectName}\r\n                                            </div>\r\n                                        )}                                       \r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input name=\"projectIdentifier\" type=\"text\" \r\n                                        className={classnames(\"form-control form-control-lg\",{\r\n                                            \"is-invalid\" : errors.projectIdentifier\r\n                                        })}\r\n                                        placeholder=\"Unique Project ID\"\r\n                                        value={this.state.projectIdentifier} \r\n                                        onChange={this.onChange}    />\r\n                                       {errors.projectIdentifier && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                                {errors.projectIdentifier}\r\n                                            </div>\r\n                                        )}  \r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <textarea name=\"description\" \r\n                                        className={classnames(\"form-control form-control-lg\",{\r\n                                            \"is-invalid\" : errors.description\r\n                                        })} \r\n                                        placeholder=\"Project Description\" \r\n                                        value={this.state.description}\r\n                                        onChange={this.onChange} ></textarea>\r\n                                        {errors.description && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                                {errors.description}\r\n                                            </div>\r\n                                        )}  \r\n                                        \r\n                                    </div>\r\n                                    <h6>Start Date</h6>\r\n                                    <div className=\"form-group\">\r\n                                        <input name=\"start_date\" type=\"date\" className=\"form-control form-control-lg\" \r\n                                        value={this.state.start_date} \r\n                                        onChange={this.onChange}/>\r\n                                    </div>\r\n                                    <h6>Estimated End Date</h6>\r\n                                    <div className=\"form-group\">\r\n                                        <input name=\"end_date\" type=\"date\" className=\"form-control form-control-lg\" \r\n                                        value={this.state.end_date} \r\n                                        onChange={this.onChange}/>\r\n                                    </div>\r\n\r\n                                    <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAddProject.propTypes = {\r\n    createProject : PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps, \r\n    { createProject }\r\n    \r\n) (AddProject);","import {GET_BACKLOG, \r\n        GET_PROJECT_TASK, \r\n        DELETE_PROJECT_TASK\r\n       } \r\nfrom \"../actions/types\";\r\n\r\n\r\n\r\nconst initialState = {\r\n    project_tasks: [],\r\n    project_task: {}\r\n};\r\n\r\nconst backlogReducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        \r\n        case GET_BACKLOG:\r\n            return {\r\n                ...state,\r\n                project_tasks: action.payload\r\n            };\r\n                \r\n        case GET_PROJECT_TASK:\r\n            return {\r\n                    ...state,\r\n                    project_task: action.payload\r\n                }\r\n            \r\n            \r\n        case DELETE_PROJECT_TASK:\r\n            return {\r\n               ...state,\r\n               project_tasks: state.project_tasks.filter(project_task => project_task.projectSequence !== action.payload)\r\n            }\r\n                    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default backlogReducer;","import {GET_ERRORS} from '../actions/types';\r\n\r\nconst initialState = {};\r\n\r\nconst errorReducer = (state=initialState, action) => {\r\n    switch(action.type){\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n        \r\n        default : \r\n            return state;\r\n    }\r\n};\r\nexport default errorReducer;\r\n","import {GET_PROJECTS , GET_PROJECT, DELETE_PROJECT} from '../actions/types';\r\n\r\nconst initialState = {\r\n    projects: [],\r\n    project: {}\r\n};\r\n\r\nconst projectRedcuer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        \r\n        case GET_PROJECTS:\r\n            return {\r\n                ...state,\r\n                projects: action.payload\r\n            };\r\n        case GET_PROJECT:\r\n            return {\r\n                ...state,\r\n                project: action.payload\r\n            };\r\n        case DELETE_PROJECT:\r\n            return {\r\n                ...state,\r\n                projects: state.projects.filter(project => project.projectIdentifier !== action.payload)\r\n            };\r\n        default: \r\n            return state;\r\n    }\r\n}\r\nexport default projectRedcuer;","import {SET_CURRENT_USER} from '../actions/types'\r\n\r\nconst initialState = {\r\n    \r\n    user: {},\r\n    validToken: false\r\n    \r\n}\r\n\r\nconst booleanActionPayload = (payload) => {\r\n    if(payload)\r\n        return true;\r\n    else\r\n        return false;\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    \r\n    switch(action.type){\r\n        \r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                validToken: booleanActionPayload(action.payload),\r\n                user: action.payload\r\n            }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}","import {combineReducers} from \"redux\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport securityReducer from \"./securityReducer\"\r\n\r\nexport default combineReducers({\r\n    errors: errorReducer,\r\n    project: projectReducer,\r\n    backlog: backlogReducer,\r\n    security: securityReducer\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from \"./reducers\"\r\n\r\nconst initialState = {}\r\nconst middleware = [thunk]\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n    store = createStore(\r\n        rootReducer, \r\n        initialState, \r\n        compose(\r\n            applyMiddleware(...middleware),\r\n            ReactReduxDevTools\r\n        )\r\n );\r\n} else {\r\n    store = createStore(\r\n        rootReducer, \r\n        initialState, \r\n        compose(applyMiddleware(...middleware))\r\n );\r\n}\r\n\r\n\r\nexport default store;","import React, { Component } from 'react'\r\nimport { getProject, createProject } from '../../actions/projectActions';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n    \r\n    //set state\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            id: \"\",\r\n            projectName: \"\",\r\n            projectIdentifier: \"\",\r\n            description: \"\",\r\n            start_date: \"\",\r\n            end_date: \"\",\r\n            errors: {}\r\n        }\r\n        \r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    \r\n    componentWillReceiveProps(nextProps){\r\n        \r\n        if(nextProps.errors){\r\n            this.setState({errors:nextProps.errors})\r\n        }\r\n        \r\n       const {id, projectName, projectIdentifier, description, start_date, end_date} = nextProps.project;\r\n       \r\n       this.setState({\r\n           id, \r\n           projectName, \r\n           projectIdentifier, \r\n           description, \r\n           start_date, \r\n           end_date\r\n       });\r\n    }\r\n    \r\n    componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        this.props.getProject(id, this.props.history);\r\n    }\r\n    \r\n    onChange(e){\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n    \r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const updateProject = {\r\n            id: this.state.id,\r\n            projectName: this.state.projectName,\r\n            projectIdentifier: this.state.projectIdentifier,\r\n            description: this.state.description,\r\n            start_date: this.state.start_date,\r\n            end_date: this.state.end_date\r\n        };\r\n        \r\n        this.props.createProject(updateProject, this.props.history);\r\n    }\r\n    \r\n    render() {\r\n        const {errors} = this.state;\r\n        \r\n        return (\r\n               <div className=\"project\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8 m-auto\">\r\n                                <h5 className=\"display-4 text-center\">Update Project Form</h5>\r\n                                <hr />\r\n                                <form onSubmit={this.onSubmit}>\r\n                                    <div className=\"form-group\">\r\n                                        <input \r\n                                            type=\"text\" \r\n                                            className={classnames(\"form-control form-control-lg\",{\r\n                                                \"is-invalid\": errors.projectName\r\n                                            })}\r\n                                            placeholder=\"Project Name\"\r\n                                            name=\"projectName\"\r\n                                            value={this.state.projectName}\r\n                                            onChange={this.onChange} \r\n                                        />\r\n                                        {\r\n                                            errors.projectName && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                                {errors.projectName}\r\n                                            </div>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input \r\n                                            type=\"text\" \r\n                                            className=\"form-control form-control-lg\" \r\n                                            placeholder=\"Unique Project ID\"\r\n                                            name=\"projectIdentifier\"\r\n                                            value={this.state.projectIdentifier} \r\n                                            disabled\r\n                                            onChange={this.onChange} />\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"form-group\">\r\n                                        <textarea \r\n                                            className={classnames(\"form-control form-control-lg\",{\r\n                                                \"is-invalid\": errors.description\r\n                                            })} \r\n                                            placeholder=\"Project Description\"\r\n                                            name=\"description\"\r\n                                             value={this.state.description}\r\n                                             onChange={this.onChange} \r\n                                        ></textarea>\r\n                                        {errors.description && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                                {errors.description}\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                    <h6>Start Date</h6>\r\n                                    <div className=\"form-group\">\r\n                                        <input \r\n                                            type=\"date\" \r\n                                            className=\"form-control form-control-lg\" \r\n                                            name=\"start_date\"\r\n                                             value={this.state.start_date}\r\n                                             onChange={this.onChange}  />\r\n                                    </div>\r\n                                    <h6>Estimated End Date</h6>\r\n                                    <div className=\"form-group\">\r\n                                        <input \r\n                                            type=\"date\" \r\n                                            className=\"form-control form-control-lg\" \r\n                                            name=\"end_date\" \r\n                                             value={this.state.end_date}\r\n                                             onChange={this.onChange} />\r\n                                    </div>\r\n\r\n                                    <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n    getProject: PropTypes.func.isRequired,\r\n    createProject: PropTypes.func.isRequired,\r\n    project: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    project:state.project.project,\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, {getProject, createProject}) (UpdateProject);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {deleteProjectTask} from '../../../actions/backlogActions';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\n\r\nclass ProjectTask extends Component {\r\n  \r\n  onDeleteClick(backlog_id, pt_id){\r\n    this.props.deleteProjectTask(backlog_id, pt_id);\r\n  }\r\n  render() {\r\n    const { project_task } = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if (project_task.priority === 1) {\r\n      priorityClass = \"bg-danger text-light\";\r\n      priorityString = \"HIGH\";\r\n    }\r\n\r\n    if (project_task.priority === 2) {\r\n      priorityClass = \"bg-warning text-light\";\r\n      priorityString = \"MEDIUM\";\r\n    }\r\n\r\n    if (project_task.priority === 3) {\r\n      priorityClass = \"bg-info text-light\";\r\n      priorityString = \"LOW\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {project_task.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${\r\n              project_task.projectSequence\r\n            }`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n\r\n          <button className=\"btn btn-danger ml-4\" onClick={this.onDeleteClick.bind(this, project_task.projectIdentifier, project_task.projectSequence)}>Delete</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, {deleteProjectTask}) (ProjectTask);","import axios from 'axios'\r\nimport {GET_ERRORS, GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK} from './types';\r\n\r\nexport const addProjectTask = (backlog_id, project_task, history) => async dispatch => {\r\n    \r\n    try {\r\n        \r\n        await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n        history.push(`/projectBoard/${backlog_id}`);\r\n        dispatch({\r\n            \r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        });\r\n    } catch (err) {\r\n         dispatch({\r\n            \r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n    \r\n    \r\n};\r\n\r\nexport const getBacklog = (backlog_id) => async dispatch => {\r\n    \r\n    try {\r\n        const res = await axios.get(`/api/backlog/${backlog_id}`)\r\n        dispatch({\r\n            type: GET_BACKLOG,\r\n            payload : res.data\r\n        })\r\n    } catch (err) {\r\n         dispatch({\r\n            \r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n}\r\n\r\nexport const getProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const updateProjectTask = (backlog_id, pt_id, project_task, history) => async dispatch => {\r\n    \r\n    try {\r\n        await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task)        \r\n        history.push(`/projectBoard/${backlog_id}`)\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            \r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\r\n    \r\n    if(window.confirm(`You are deleting project task ${pt_id}! This action cannot be undone, are you sure?`)){\r\n        await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`)\r\n        \r\n        dispatch({\r\n            type: DELETE_PROJECT_TASK,\r\n            payload: pt_id\r\n        })\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport ProjectTask from './ProjectTasks/ProjectTask';\r\n\r\nclass Backlog extends Component {\r\n    render() {\r\n        \r\n        const {project_tasks_prop} = this.props;\r\n        \r\n        const tasks = project_tasks_prop.map(project_task => (\r\n             <ProjectTask key={project_task.id} project_task={project_task} />\r\n            )\r\n        )\r\n        \r\n        let todoItems = []\r\n        let inProgress = []\r\n        let doneItems = []\r\n        \r\n        for(let i=0; i < tasks.length; i++){\r\n            if(tasks[i].props.project_task.status === \"TO_DO\"){\r\n                todoItems.push(tasks[i]);\r\n            }\r\n            \r\n            if(tasks[i].props.project_task.status === \"IN_PROGRESS\"){\r\n                inProgress.push(tasks[i]);\r\n            }\r\n            \r\n            if(tasks[i].props.project_task.status === \"DONE\"){\r\n                doneItems.push(tasks[i]);\r\n            }\r\n        }\r\n        \r\n        return (\r\n            <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"card text-center mb-2\">\r\n                                <div className=\"card-header bg-secondary text-white\">\r\n                                    <h3>TO DO</h3>\r\n                                </div>\r\n                            </div>\r\n                            {\r\n                               todoItems\r\n                            }\r\n\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"card text-center mb-2\">\r\n                                <div className=\"card-header bg-primary text-white\">\r\n                                    <h3>In Progress</h3>\r\n                                </div>\r\n                            </div>\r\n                             {\r\n                               inProgress\r\n                             }\r\n                            \r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"card text-center mb-2\">\r\n                                <div className=\"card-header bg-success text-white\">\r\n                                    <h3>Done</h3>\r\n                                </div>\r\n                            </div>\r\n                            {\r\n                                doneItems\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Backlog;","import React, { Component } from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport Backlog from './Backlog';\r\nimport {connect} from \"react-redux\"\r\nimport PropTypes from 'prop-types'\r\nimport {getBacklog} from '../../actions/backlogActions'\r\n\r\nclass ProjectBoard extends Component {\r\n    \r\n    //constructor to handle errors\r\n    \r\n    constructor(){\r\n        super();\r\n        \r\n        this.state = {\r\n            errors: {}\r\n        }\r\n    }\r\n    \r\n    componentDidMount(){\r\n        const {id} = this.props.match.params;\r\n        this.props.getBacklog(id);\r\n    }\r\n    \r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.errors){\r\n            this.setState({errors: nextProps.errors})\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        \r\n        const {id} = this.props.match.params;\r\n        const {project_tasks} = this.props.backlog\r\n        const {errors} = this.state;\r\n        \r\n        let BoardContent;\r\n        \r\n        const boardAlgorithm = (errors, project_tasks) => {\r\n            \r\n            if(project_tasks.length < 1){\r\n                \r\n                if(errors.projectNotFound){\r\n                    return(\r\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                            {errors.projectNotFound}\r\n                        </div>\r\n                    );\r\n                }else if(errors.projectIdentifier){\r\n                    return(\r\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                            {errors.projectIdentifier}\r\n                        </div>\r\n                    );\r\n                } else {\r\n                   return (\r\n                       <div className=\"alert alert-info text-center\" role=\"alert\">\r\n                            No Project Tasks on this board\r\n                        </div>  \r\n                    );  \r\n                }\r\n            } else {\r\n               return <Backlog project_tasks_prop={project_tasks}/>\r\n            }\r\n        };\r\n        \r\n        BoardContent = boardAlgorithm(errors, project_tasks);\r\n        \r\n        \r\n        return (\r\n            <div className=\"container\">\r\n                <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n                    <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n                </Link>\r\n                <br />\r\n                <hr />\r\n                {BoardContent}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n    backlog: PropTypes.object.isRequired,\r\n    getBacklog: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    backlog: state.backlog,\r\n    errors: state.errors\r\n})\r\n\r\nexport default \r\n    connect(\r\n        mapStateToProps,\r\n        {getBacklog}\r\n    ) (ProjectBoard);","import React, { Component } from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport {connect} from 'react-redux'\r\nimport classnames from 'classnames';\r\nimport {addProjectTask} from '../../../actions/backlogActions'\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AddProjectTask extends Component {\r\n    \r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        const {id} = this.props.match.params;\r\n        \r\n        this.state = {\r\n        summary: \"\",\r\n        acceptanceCriteria: \"\",\r\n        status: \"\",\r\n        priority: 0,\r\n        dueDate: \"\",\r\n        projectIdentifier:id,\r\n        errors: {}\r\n        };\r\n        \r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        \r\n    }\r\n    \r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.errors){\r\n            this.setState({errors: nextProps.errors})\r\n        }\r\n    }\r\n    \r\n    //on change\r\n    onChange(e){\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n    \r\n    //on submit\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n        \r\n        const newTask = {\r\n            summary: this.state.summary,\r\n            acceptanceCriteria: this.state.acceptanceCriteria,\r\n            status: this.state.status,\r\n            priority: this.state.priority,\r\n            dueDate: this.state.dueDate\r\n        }\r\n        \r\n        this.props.addProjectTask(this.state.projectIdentifier, newTask, this.props.history)\r\n    }\r\n    \r\n    render() {\r\n        const {errors} = this.state;  \r\n        const {id} = this.props.match.params;\r\n        return (\r\n            <div className=\"add-PBI\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8 m-auto\">\r\n                                <Link to={`/projectBoard/${id}`} className=\"btn btn-primary mb-3\">\r\n                                    <i className=\"fas fa-arrow-left\"></i>\r\n                                     Back to Project Board\r\n                                </Link>\r\n                                <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n                                <p className=\"lead text-center\">Project Name + Project Code</p>\r\n                                <form onSubmit={this.onSubmit}>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"text\" \r\n                                        name=\"summary\" placeholder=\"Project Task summary\"\r\n                                        className={classnames(\"form-control form-control-lg\",{\r\n                                            \"is-invalid\" : errors.summary\r\n                                        })} \r\n                                        value={this.state.summary}\r\n                                        onChange={this.onChange}/>\r\n                                        {errors.summary && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                                {errors.summary}\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <textarea className=\"form-control form-control-lg\" placeholder=\"Acceptance Criteria\" name=\"acceptanceCriteria\"\r\n                                        value={this.state.acceptanceCriteria}\r\n                                        onChange={this.onChange}></textarea>\r\n                                    </div>\r\n                                    <h6>Due Date</h6>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"date\" className=\"form-control form-control-lg\" name=\"dueDate\" \r\n                                        value={this.state.dueDate}\r\n                                        onChange={this.onChange}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <select className=\"form-control form-control-lg\" name=\"priority\"\r\n                                                value={this.state.priority}\r\n                                                onChange={this.onChange}\r\n                                                >\r\n                                            <option value={0}>Select Priority</option>\r\n                                            <option value={1}>High</option>\r\n                                            <option value={2}>Medium</option>\r\n                                            <option value={3}>Low</option>\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <select className=\"form-control form-control-lg\" name=\"status\" \r\n                                            value={this.state.status}\r\n                                            onChange={this.onChange}\r\n                                            >\r\n                                            <option value=\"\">Select Status</option>\r\n                                            <option value=\"TO_DO\">TO DO</option>\r\n                                            <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                            <option value=\"DONE\">DONE</option>\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n    addProjectTask: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {addProjectTask}\r\n) (AddProjectTask);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { getProjectTask, updateProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Link} from \"react-router-dom\"\r\n\r\nclass UpdateProjectTask extends Component {\r\n    \r\n    \r\n    constructor(){\r\n        super();\r\n        \r\n        this.state={\r\n            id: \"\",\r\n            projectSequence: \"\",\r\n            summary: \"\",\r\n            acceptanceCriteria: \"\",\r\n            status: \"\",\r\n            priority: \"\",\r\n            dueDate: \"\",\r\n            projectIdentifier: \"\",\r\n            create_At: \"\",\r\n            errors:{}\r\n            \r\n        }\r\n        \r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    \r\n    \r\n  componentDidMount() {\r\n    const { backlog_id, pt_id } = this.props.match.params;\r\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\r\n  }\r\n  \r\n  componentWillReceiveProps(nextProps){\r\n      \r\n    if(nextProps.errors){\r\n        this.setState({errors: nextProps.errors});\r\n    }\r\n      const {\r\n            id,\r\n            projectSequence,\r\n            summary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate,\r\n            projectIdentifier,\r\n            create_At\r\n      } = nextProps.project_task;\r\n      \r\n      this.setState({\r\n          id,\r\n            projectSequence,\r\n            summary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate,\r\n            projectIdentifier,\r\n            create_At\r\n      })\r\n  }\r\n  \r\n  onChange(e){\r\n      this.setState({[e.target.name]: e.target.value})\r\n  }\r\n  \r\n  onSubmit(e) {\r\n      e.preventDefault();\r\n      \r\n      const UpdateProjectTask = {\r\n            id: this.state.id,\r\n            projectSequence: this.state.projectSequence,\r\n            summary: this.state.summary,\r\n            acceptanceCriteria: this.state.acceptanceCriteria,\r\n            status: this.state.status,\r\n            priority: this.state.priority,\r\n            dueDate: this.state.dueDate,\r\n            projectIdentifier: this.state.projectIdentifier,\r\n            create_At: this.state.create_At\r\n      } \r\n      \r\n      //console.log(UpdateProjectTask);\r\n      this.props.updateProjectTask(\r\n          this.state.projectIdentifier, \r\n          this.state.projectSequence, \r\n          UpdateProjectTask, \r\n          this.props.history\r\n        );\r\n  }\r\n  \r\n\r\n  render() {\r\n      \r\n    const {errors} = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n               <Link to={`/projectBoard/${this.state.projectIdentifier}`} className=\"btn btn-primary mb-3\">\r\n                    <i className=\"fas fa-arrow-left\"></i>\r\n                        Back to Project Board\r\n                </Link>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name : <b>{this.state.projectIdentifier}</b> | Project Code : <b>{this.state.projectSequence}</b></p>\r\n              <form onSubmit = {this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                      <div className=\"invalid-feedback\">\r\n                         {errors.summary}\r\n                       </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors\r\n  \r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjectTask, updateProjectTask }\r\n)(UpdateProjectTask);","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from \"prop-types\"\r\n\r\nclass Landing extends Component {\r\n    \r\n    \r\n    componentDidMount(){\r\n        if(this.props.security.validToken){\r\n            this.props.history.push(\"/dashboard\")\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"landing\">\r\n                <div className=\"light-overlay landing-inner text-dark\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 text-center\">\r\n                                <h1 className=\"display-3 mb-4\">Personal Project Management Tool</h1>\r\n                                <p className=\"lead\">\r\n                                    Create your account to join active projects or start you own\r\n                                </p>\r\n                                <hr />\r\n                                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\r\n                                    Sign Up\r\n                                </Link>\r\n                                 <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\r\n                                    Login\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nLanding.propTypes = {\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security\r\n})\r\nexport default connect(\r\n    mapStateToProps)(Landing);","import React, { Component } from 'react'\r\nimport { createNewUser } from '../../actions/securityActions';\r\nimport PropTypes from \"prop-types\"\r\nimport {connect} from \"react-redux\"\r\nimport classnames from \"classnames\"\r\n\r\n\r\n\r\nclass Register extends Component {\r\n    \r\n    \r\n    constructor(){\r\n        super();\r\n        \r\n        this.state = {\r\n            \"username\": \"\",\r\n            \"fullName\": \"\",\r\n            \"password\": \"\",\r\n            \"confirmPassword\": \"\",\r\n            errors: {}\r\n        }\r\n        \r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    \r\n    componentDidMount(){\r\n        if(this.props.security.validToken){\r\n            this.props.history.push(\"/dashboard\")\r\n        }\r\n    }\r\n    \r\n    onSubmit(e){\r\n        e.preventDefault();\r\n        const newUser = {\r\n            \"username\": this.state.username,\r\n            \"fullName\": this.state.fullName,\r\n            \"password\": this.state.password,\r\n            \"confirmPassword\": this.state.confirmPassword\r\n        };\r\n        \r\n        this.props.createNewUser(newUser, this.props.history)\r\n    }\r\n    \r\n    onChange(e){\r\n        this.setState({ [e.target.name]:e.target.value });\r\n    }\r\n    \r\n    componentWillReceiveProps(nextProps){\r\n        \r\n        if(nextProps.errors){\r\n            this.setState({ errors: nextProps.errors });\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        \r\n        const  {errors} = this.state;\r\n        return (\r\n            <div className=\"register\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n                            <p className=\"lead text-center\">Create your Account</p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className={classnames(\"form-control form-control-lg\",{                                          \r\n                                            \"is-invalid\": errors.fullName\r\n                                        })}\r\n                                        placeholder=\"Name\" \r\n                                        name=\"fullName\"\r\n                                        value={this.state.fullName}\r\n                                        onChange={this.onChange} \r\n                                    />\r\n                                    {\r\n                                        errors.fullName && (\r\n                                            <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className={classnames(\"form-control form-control-lg\",{                                          \r\n                                            \"is-invalid\": errors.username\r\n                                        })} \r\n                                        placeholder=\"Email Address\" \r\n                                        name=\"username\" \r\n                                        value={this.state.username}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {\r\n                                        errors.username && (\r\n                                            <div className=\"invalid-feedback\">{errors.username}</div>\r\n                                        )\r\n                                    }\r\n\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"password\" \r\n                                        className={classnames(\"form-control form-control-lg\",{                                          \r\n                                            \"is-invalid\": errors.password\r\n                                        })} \r\n                                        placeholder=\"Password\" \r\n                                        name=\"password\" \r\n                                        value={this.state.password}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {\r\n                                        errors.password && (\r\n                                            <div className=\"invalid-feedback\">{errors.password}</div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"password\" \r\n                                        className={classnames(\"form-control form-control-lg\",{                                          \r\n                                            \"is-invalid\": errors.confirmPassword\r\n                                        })} \r\n                                        placeholder=\"Confirm Password\"\r\n                                        name=\"confirmPassword\" \r\n                                        value={this.state.confirmPassword}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {\r\n                                        errors.confirmPassword && (\r\n                                            <div className=\"invalid-feedback\">{errors.confirmPassword}</div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nRegister.propTypes = {\r\n    createNewUser: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors,\r\n    security: state.security\r\n})\r\n\r\nexport default connect(\r\n        mapStateToProps,\r\n        {createNewUser}\r\n) (Register);","import React, { Component } from 'react'\r\nimport PropTypes from \"prop-types\"\r\nimport {connect} from \"react-redux\"\r\nimport classnames from 'classnames'\r\nimport {login} from '../../actions/securityActions'\r\n\r\n\r\n\r\nclass Login extends Component {\r\n    \r\n    constructor() {\r\n        super();\r\n        \r\n        this.state = {\r\n                \"username\": \"\",\r\n                \"password\": \"\",\r\n                errors: {}   \r\n        };\r\n        \r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    \r\n    componentDidMount(){\r\n        if(this.props.security.validToken){\r\n            this.props.history.push(\"/dashboard\")\r\n        }\r\n    }\r\n    \r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.security.validToken){\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n        \r\n        if(nextProps.errors){\r\n            this.setState({errors: nextProps.errors})\r\n        }\r\n    }\r\n    \r\n    onChange(e){\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n    \r\n    onSubmit(e){\r\n        e.preventDefault();\r\n        \r\n        const LoginRequest = {\r\n             \"username\": this.state.username,\r\n            \"password\":  this.state.password,\r\n        };\r\n        \r\n        this.props.login(LoginRequest);\r\n        \r\n    }\r\n    \r\n    render() {\r\n        \r\n        const {errors} = this.state;\r\n        return (\r\n           <div className=\"login\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Log In</h1>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.username\r\n                                        })} \r\n                                        placeholder=\"Email Address\" \r\n                                        name=\"username\"\r\n                                        value={this.state.username}\r\n                                        onChange={this.onChange} \r\n                                    />\r\n                                    {\r\n                                        errors.username && (\r\n                                            <div className=\"invalid-feedback\">{errors.username}</div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"password\" \r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.password\r\n                                        })} \r\n                                        placeholder=\"Password\" \r\n                                        name=\"password\"\r\n                                        value={this.state.password} \r\n                                        onChange={this.onChange}  \r\n                                    />\r\n                                     {\r\n                                        errors.password && (\r\n                                            <div className=\"invalid-feedback\">{errors.password}</div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    login\r\n})(Login)\r\n","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\n\r\nconst SecuredRoute = ({component: Component, security, ...otherProps}) => (\r\n  <Route {...otherProps} \r\n    render={props => \r\n        security.validToken === true ? \r\n            (<Component {...props} />)  : (<Redirect to=\"login\" />)\r\n        \r\n        }\r\n    /> \r\n);\r\n\r\n\r\nSecuredRoute.propTypes = {\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security\r\n})\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute)","import './App.css';\nimport './components/Dashboard'\nimport Dashboard from './components/Dashboard';\nimport Header from './components/Layout/Header';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport AddProject from './components/Project/AddProject';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport UpdateProject from './components/Project/UpdateProject';\nimport ProjectBoard from './components/ProjectBoard/ProjectBoard';\nimport AddProjectTask from './components/ProjectBoard/ProjectTasks/AddProjectTask';\nimport UpdateProjectTask from './components/ProjectBoard/ProjectTasks/UpdateProjectTask';\nimport Landing from './components/Layout/Landing';\nimport Register from './components/UserManagement/Register';\nimport Login from './components/UserManagement/Login';\nimport jwt_decode from \"jwt-decode\"\nimport setJWTToken from './securityUtils/setJWTToken';\nimport React, { Component } from 'react'\nimport {SET_CURRENT_USER} from './actions/types'\nimport {logout} from './actions/securityActions'\nimport SecureRoute from './securityUtils/SecureRoute'\n\n\nconst jwtToken = localStorage.jwtToken;\n\nif(jwtToken){\n  setJWTToken(jwtToken);\n  \n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n        type: SET_CURRENT_USER,\n        payload: decoded_jwtToken\n    })\n    \n  const currentTime = Date.now() / 1000\n  if(decoded_jwtToken.exp < currentTime){\n    \n    //handle logout\n    store.dispatch(logout())\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header />\n          \n          {\n            //Public Routes\n          }\n          \n           <Route exact path=\"/\" component={Landing}/>\n           <Route exact path=\"/register\" component={Register}/>\n           <Route exact path=\"/login\" component={Login}/>\n          \n          {\n            //Private Routes\n          }\n          <Switch>\n            <SecureRoute exact path=\"/dashboard\" component={Dashboard}/>\n            <SecureRoute exact path=\"/addProject\" component={AddProject}/>\n            <SecureRoute exact path=\"/updateProject/:id\" component={UpdateProject}/>\n            <SecureRoute exact path=\"/projectBoard/:id\" component={ProjectBoard} />\n            <SecureRoute exact path=\"/addProjectTask/:id\" component={AddProjectTask} />\n            <SecureRoute exact path=\"/updateProjectTask/:backlog_id/:pt_id\" component={UpdateProjectTask} />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}